<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Basic_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Basic_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Jan 22 09:40:48 2022
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ChipInit &rArr; CSC_Init &rArr; CSC_XOSC_Enable
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">ADC_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[1e]">APX_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[c]">COMP_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[f]">DAC_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[d]">DMA_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[8]">EXINT0_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[9]">EXINT1_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[a]">EXINT2_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[b]">EXINT3_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[22]">HardFault_Handler_C</a> from system_mg32x02z.o(i.HardFault_Handler_C) referenced from startup_mg32x02z.o(.text)
 <LI><a href="#[1b]">I2C0_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[1c]">I2Cx_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[0]">MG32x02z_IEC60730_MANAGER</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from mg32x02z__irqhandler.o(i.NMI_Handler) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from mg32x02z__irqhandler.o(i.PendSV_Handler) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[19]">SPI0_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[1a]">SPIx_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from mg32x02z__irqhandler.o(i.SVC_Handler) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[7]">SYS_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from mg32x02z__irqhandler.o(i.SysTick_Handler) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_mg32x02z.o(i.SystemInit) referenced from startup_mg32x02z.o(.text)
 <LI><a href="#[10]">TM0x_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[11]">TM10_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[12]">TM1x_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[13]">TM20_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[14]">TM2x_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[15]">TM3x_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[16]">URT0_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[17]">URT123_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[18]">URT4x_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[1d]">USB_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[6]">WWDT_IRQHandler</a> from startup_mg32x02z.o(.text) referenced from startup_mg32x02z.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mg32x02z.o(.text)
 <LI><a href="#[23]">fputc</a> from fputc.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[26]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[4d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>MG32x02z_IEC60730_MANAGER</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ReInitial_Stack</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>APX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2Cx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPIx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SYS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TM0x_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TM1x_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TM20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TM2x_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TM3x_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>URT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>URT123_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>URT4x_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mg32x02z.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_XOSC_Enable
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_IHRCO_Enable
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[54]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[55]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[56]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>CSC_EXTCK_Enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mg32x02z_csc_init.o(i.CSC_EXTCK_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_Init
</UL>

<P><STRONG><a name="[2f]"></a>CSC_IHRCO_Enable</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, mg32x02z_csc_init.o(i.CSC_IHRCO_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSC_IHRCO_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_Init
</UL>

<P><STRONG><a name="[31]"></a>CSC_Init</STRONG> (Thumb, 974 bytes, Stack size 96 bytes, mg32x02z_csc_init.o(i.CSC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = CSC_Init &rArr; CSC_XOSC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_XOSC_Enable
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_IHRCO_Enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_EXTCK_Enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipInit
</UL>

<P><STRONG><a name="[32]"></a>CSC_XOSC_Enable</STRONG> (Thumb, 142 bytes, Stack size 88 bytes, mg32x02z_csc_init.o(i.CSC_XOSC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSC_XOSC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_Init
</UL>

<P><STRONG><a name="[34]"></a>ChipInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mg32x02z_chipinit.o(i.ChipInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ChipInit &rArr; CSC_Init &rArr; CSC_XOSC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>GPIO_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mg32x02z_gpio_init.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipInit
</UL>

<P><STRONG><a name="[48]"></a>GPIO_PinMode_Config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mg32x02z_gpio_drv.o(i.GPIO_PinMode_Config))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>HardFault_Handler_C</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, system_mg32x02z.o(i.HardFault_Handler_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler_C &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mg32x02z__common_drv.o(i.IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mg32x02z__irqhandler.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mg32x02z__irqhandler.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mg32x02z__irqhandler.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>Sample_TM00_Delay</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sample_tm00_delay.o(i.Sample_TM00_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Sample_TM00_Delay &rArr; TM_TimeBase_Init &rArr; TM_TimerMode_Select
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Timer_Cmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBaseStruct_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GetSingleFlagStatus
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mg32x02z__irqhandler.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_mg32x02z.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mg32x02z.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>TM_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
</UL>

<P><STRONG><a name="[41]"></a>TM_CounterClock_Select</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_CounterClock_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_CounterClock_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[3f]"></a>TM_Counter_Config</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_Counter_Config))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[3c]"></a>TM_GetSingleFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_GetSingleFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
</UL>

<P><STRONG><a name="[42]"></a>TM_PrescalerClock_Select</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_PrescalerClock_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_PrescalerClock_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[3e]"></a>TM_Prescaler_Config</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_Prescaler_Config))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[44]"></a>TM_SetCounterDirection</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_SetCounterDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_SetCounterDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[43]"></a>TM_SetInternalClockDivider</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_SetInternalClockDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_SetInternalClockDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[45]"></a>TM_SetPrescalerDirection</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_SetPrescalerDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_SetPrescalerDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[38]"></a>TM_TimeBaseStruct_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_TimeBaseStruct_Init))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
</UL>

<P><STRONG><a name="[39]"></a>TM_TimeBase_Init</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, mg32x02z_tm_drv.o(i.TM_TimeBase_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TM_TimeBase_Init &rArr; TM_TimerMode_Select
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimerMode_Select
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_SetPrescalerDirection
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_SetInternalClockDivider
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_SetCounterDirection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Prescaler_Config
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_PrescalerClock_Select
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Counter_Config
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_CounterClock_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
</UL>

<P><STRONG><a name="[40]"></a>TM_TimerMode_Select</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mg32x02z_tm_drv.o(i.TM_TimerMode_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_TimerMode_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBase_Init
</UL>

<P><STRONG><a name="[3b]"></a>TM_Timer_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mg32x02z_tm_drv.o(i.TM_Timer_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
</UL>

<P><STRONG><a name="[46]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[59]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[36]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler_C
</UL>

<P><STRONG><a name="[5a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[23]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; ChipInit &rArr; CSC_Init &rArr; CSC_XOSC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sample_TM00_Delay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinMode_Config
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[47]"></a>_printf_core</STRONG> (Thumb, 680 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
